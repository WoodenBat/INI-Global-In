<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ini.board.mapper.BoardMapper">

	<insert id="insertPost"
		parameterType="com.ini.board.vo.BoardDTO">
		<selectKey keyProperty="board_id" resultType="int"
			order="BEFORE">
			SELECT INI_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO INI_BOARD (
		BOARD_ID, BOARD_TITLE, BOARD_CONTENT, USER_ID,
		BOARD_CATEGORY, BOARD_TAG,
		BOARD_VIEWS, BOARD_WRITE_DATE,
		BOARD_UPDATE_DATE
		) VALUES (
		#{board_id},
		#{board_title},
		#{board_content},
		#{user_id},
		#{board_category},
		#{board_tag},
		#{board_views},
		SYSDATE,
		SYSDATE
		)
	</insert>

	<!-- 게시글 수정 -->
	<update id="updatePost"
		parameterType="com.ini.board.vo.BoardDTO">
		UPDATE INI_BOARD
		SET BOARD_TITLE = #{board_title},
		BOARD_CONTENT = #{board_content},
		BOARD_CATEGORY = #{board_category},
		BOARD_TAG = #{board_tag},
		BOARD_UPDATE_DATE = SYSDATE
		WHERE BOARD_ID =
		#{board_id}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="deletePost">
		DELETE FROM INI_BOARD WHERE BOARD_ID = #{board_id}
	</delete>

	<!-- 게시글 상세 조회 -->
	<select id="selectPostById"
		resultType="com.ini.board.vo.BoardDetailDTO">
		SELECT
		b.BOARD_ID AS board_id,
		b.BOARD_TITLE AS board_title,
		b.BOARD_CONTENT AS
		board_content,
		b.USER_ID AS user_id,
		u.USER_NICKNAME
		AS user_nickname,
		b.BOARD_VIEWS AS board_views,
		b.BOARD_CATEGORY AS
		board_category,
		c.BOARD_CATEGORY_JP AS category_name,
		b.BOARD_TAG AS
		board_tag,
		t.BOARD_TAG_JP AS tag_name,
		b.BOARD_WRITE_DATE AS
		board_write_date
		FROM INI_BOARD b
		LEFT JOIN BOARD_CATEGORY c ON
		b.BOARD_CATEGORY = c.BOARD_CATEGORY
		LEFT JOIN BOARD_TAG t ON
		b.BOARD_TAG = t.BOARD_TAG
		LEFT JOIN INI_USER u ON b.USER_ID = u.USER_ID
		WHERE b.BOARD_ID = #{board_id}
	</select>

	<!-- 게시글 기본 조회 -->
	<select id="selectBoardById"
		resultType="com.ini.board.vo.BoardDTO">
		SELECT * FROM INI_BOARD WHERE BOARD_ID = #{board_id}
	</select>

	<!-- 조회수 증가 -->
	<update id="updateViewCount">
		UPDATE INI_BOARD SET BOARD_VIEWS = BOARD_VIEWS + 1
		WHERE BOARD_ID =
		#{board_id}
	</update>

	<resultMap id="BoardListResultMap"
		type="com.ini.board.vo.BoardListDTO">
		<result property="board_id" column="BOARD_ID" />
		<result property="board_title" column="BOARD_TITLE" />
		<result property="category_name" column="CATEGORY_NAME_JP" />
		<result property="tag_name" column="TAG_NAME_JP" />
		<result property="user_id" column="USER_ID" />
		<result property="user_nickname" column="USER_NICKNAME" />
		<result property="board_views" column="BOARD_VIEWS" />
		<result property="board_write_date" column="BOARD_WRITE_DATE" />
		<result property="like_count" column="LIKE_COUNT" />
		<result property="reply_count" column="REPLY_COUNT" />
	</resultMap>

	<!-- 게시글 리스트 -->
	<select id="getBoardList" resultMap="BoardListResultMap"
		parameterType="map">
		SELECT
		b.BOARD_ID,
		b.BOARD_TITLE,
		c.BOARD_CATEGORY_JP AS
		CATEGORY_NAME_JP,
		t.BOARD_TAG_JP AS TAG_NAME_JP,
		b.USER_ID,
		u.USER_NICKNAME,
		b.BOARD_VIEWS,
		b.BOARD_WRITE_DATE,
		(SELECT COUNT(*) FROM
		BOARD_LIKE bl WHERE bl.BOARD_ID = b.BOARD_ID) AS
		LIKE_COUNT,
		(SELECT
		COUNT(*) FROM BOARD_REPLY r WHERE r.BOARD_ID = b.BOARD_ID) AS
		REPLY_COUNT
		FROM INI_BOARD b
		LEFT JOIN BOARD_CATEGORY c ON
		b.BOARD_CATEGORY = c.BOARD_CATEGORY
		LEFT JOIN BOARD_TAG t ON
		b.BOARD_TAG = t.BOARD_TAG
		LEFT JOIN INI_USER u ON b.USER_ID =
		u.USER_ID
		<where>
			<if test="keyword != null and keyword.trim() != ''">
				AND (
				LOWER(b.BOARD_TITLE) LIKE '%' || LOWER(#{keyword})
				|| '%'
				OR LOWER(b.BOARD_CONTENT) LIKE '%' ||
				LOWER(#{keyword}) || '%'
				OR LOWER(u.USER_NICKNAME) LIKE '%' || LOWER(#{keyword}) || '%'
				OR
				LOWER(b.USER_ID) LIKE '%' ||
				LOWER(#{keyword}) || '%'
				)
			</if>
			<if test="category != null and category != ''">
				AND b.BOARD_CATEGORY = #{category}
			</if>
			<if test="tag != null and tag != ''">
				AND b.BOARD_TAG = #{tag}
			</if>
		</where>
		ORDER BY b.BOARD_WRITE_DATE DESC
		OFFSET #{offset} ROWS FETCH NEXT
		#{limit} ROWS ONLY
	</select>

	<select id="getPostCount" resultType="int" parameterType="map">
		SELECT COUNT(*)
		FROM INI_BOARD b
		LEFT JOIN INI_USER u ON b.USER_ID =
		u.USER_ID
		<where>
			<if test="keyword != null and keyword.trim() != ''">
				AND (
				LOWER(b.BOARD_TITLE) LIKE '%' || LOWER(#{keyword})
				|| '%'
				OR LOWER(b.BOARD_CONTENT) LIKE '%' ||
				LOWER(#{keyword}) || '%'
				OR LOWER(u.USER_NICKNAME) LIKE '%' || LOWER(#{keyword}) || '%'
				OR
				LOWER(b.USER_ID) LIKE '%' ||
				LOWER(#{keyword}) || '%'
				)
			</if>
			<if test="category != null and category != ''">
				AND b.BOARD_CATEGORY = #{category}
			</if>
			<if test="tag != null and tag != ''">
				AND b.BOARD_TAG = #{tag}
			</if>
		</where>
	</select>

	<!-- 카테고리, 태그 -->
	<select id="selectAllBoardTags"
		resultType="com.ini.board.vo.BoardTagVO">
		SELECT
		BOARD_TAG AS board_tag,
		BOARD_TAG_JP AS board_tag_jp
		FROM BOARD_TAG
	</select>

	<select id="selectAllBoardCategories"
		resultType="com.ini.board.vo.BoardCategoryVO">
		SELECT
		BOARD_CATEGORY AS board_category,
		BOARD_CATEGORY_JP AS
		board_category_jp
		FROM BOARD_CATEGORY
	</select>

	<!-- 좋아요 관련 -->
	<select id="hasUserLiked" parameterType="map" resultType="int">
		SELECT
		COUNT(*)
		FROM BOARD_LIKE
		WHERE BOARD_ID = #{board_id,
		jdbcType=INTEGER}
		AND USER_ID = #{user_id, jdbcType=VARCHAR}
	</select>

	<insert id="insertLike"
		parameterType="com.ini.board.vo.BoardLikeDTO">
		INSERT INTO BOARD_LIKE (BOARD_ID, USER_ID, LIKE_STATUS)
		VALUES (#{board_id},
		#{user_id}, 1)
	</insert>

	<delete id="deleteLike">
		DELETE FROM BOARD_LIKE WHERE BOARD_ID = #{board_id}
		AND USER_ID = #{user_id}
	</delete>

	<select id="countLikes" resultType="int">
		SELECT COUNT(*) FROM
		BOARD_LIKE WHERE BOARD_ID = #{board_id}
	</select>

	<select id="getLikeCount" resultType="int">
		SELECT COUNT(*) FROM
		BOARD_LIKE WHERE BOARD_ID = #{board_id}
	</select>

	<delete id="deleteLikesByBoardId">
		DELETE FROM BOARD_LIKE WHERE BOARD_ID = #{board_id}
	</delete>

	<!-- 이미지 -->
	<insert id="insertBoardImage"
		parameterType="com.ini.board.vo.BoardImageDTO">
		INSERT INTO BOARD_IMAGE (ID, BOARD_ID, IMAGE_PATH,
		ORIGINAL_NAME,
		UPLOAD_DATE)
		VALUES (BOARD_IMAGE_SEQ.NEXTVAL,
		#{board_id}, #{image_path},
		#{original_name}, SYSDATE)
	</insert>

	<select id="selectImageList"
		resultType="com.ini.board.vo.BoardImageDTO">
		SELECT
		ID AS id,
		BOARD_ID AS board_id,
		IMAGE_PATH AS
		image_path,
		ORIGINAL_NAME AS
		original_name,
		UPLOAD_DATE AS upload_date
		FROM BOARD_IMAGE
		WHERE BOARD_ID = #{board_id}
	</select>


	<delete id="deleteImagesByBoardId">
		DELETE FROM BOARD_IMAGE WHERE BOARD_ID = #{board_id}
	</delete>

	<!-- 댓글 삭제 -->
	<delete id="deleteCommentsByBoardId">
		DELETE FROM BOARD_REPLY WHERE BOARD_ID = #{board_id}
	</delete>

	<!-- 상세 조회 (이미지 포함용) -->
	<select id="selectBoardDetail"
		resultType="com.ini.board.vo.BoardDetailDTO">
		SELECT
		b.BOARD_ID AS board_id,
		b.BOARD_TITLE AS board_title,
		b.BOARD_CONTENT AS
		board_content,
		b.USER_ID AS user_id,
		u.USER_NICKNAME
		AS user_nickname,
		b.BOARD_VIEWS AS board_views,
		b.BOARD_CATEGORY AS
		board_category,
		c.BOARD_CATEGORY_JP AS category_name,
		b.BOARD_TAG AS
		board_tag,
		t.BOARD_TAG_JP AS tag_name,
		b.BOARD_WRITE_DATE AS
		board_write_date
		FROM INI_BOARD b
		LEFT JOIN BOARD_CATEGORY c ON
		b.BOARD_CATEGORY = c.BOARD_CATEGORY
		LEFT JOIN BOARD_TAG t ON
		b.BOARD_TAG = t.BOARD_TAG
		LEFT JOIN INI_USER u ON b.USER_ID = u.USER_ID
		WHERE b.BOARD_ID = #{board_id}
	</select>

	<select id="countAllPosts" resultType="int">
		SELECT COUNT(*) FROM
		INI_BOARD
	</select>

	<!-- 신고 등록 -->
	<insert id="insertBoardReport"
		parameterType="com.ini.board.vo.BoardReportDTO">
		INSERT INTO board_report (
		report_id,
		report_content,
		report_user,
		report_date,
		report_category,
		board_id
		)
		VALUES (
		board_report_seq.NEXTVAL,
		NVL(#{report_content, jdbcType=VARCHAR}, '
		'),  <!-- 여기가 핵심 -->
		#{report_user, jdbcType=VARCHAR},
		SYSDATE,
		#{report_category,
		jdbcType=VARCHAR},
		#{board_id, jdbcType=INTEGER}
		)
	</insert>

	<!-- 특정 게시글에 특정 유저가 신고했는지 확인 -->
	<select id="countReportsByBoardAndUser" resultType="int">
		SELECT
		COUNT(*)
		FROM board_report
		WHERE board_id = #{board_id}
		AND
		report_user =
		#{report_user}
	</select>

	<!-- 특정 게시글 신고 횟수 조회 -->
	<select id="countReportsByBoard" resultType="int">
		SELECT COUNT(*)
		FROM
		board_report
		WHERE board_id = #{board_id}
	</select>

	<resultMap id="BoardResultMap"
		type="com.ini.board.vo.BoardDTO">
		<id property="board_id" column="board_id" />
		<result property="board_title" column="board_title" />
		<result property="board_content" column="board_content" />
		<result property="user_id" column="user_id" />
		<result property="board_views" column="board_views" />
		<result property="board_write_date" column="board_write_date" />
		<result property="board_update_date" column="board_update_date" />
		<result property="board_category" column="board_category" />
		<result property="board_tag" column="board_tag" />
		<!-- likes와 comments는 0으로 고정하니 매핑 안해도 무방 -->
	</resultMap>


	<!-- ✅ 게시글 목록 조회 -->
	<select id="selectBoardList" resultMap="BoardResultMap">
		SELECT
		board_id,
		board_title,
		board_content,
		user_id,
		board_views,
		board_write_date,
		board_update_date,
		board_category,
		board_tag,
		0 AS
		likes,
		0 AS comments
		FROM ini_board
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="keyword != null and keyword != ''">
				AND (board_title LIKE '%' || #{keyword} || '%'
				OR
				board_content LIKE '%' || #{keyword} || '%')
			</if>
			<if test="category != null and category != ''">
				AND board_category = #{category}
			</if>
		</trim>
		ORDER BY board_write_date DESC
		OFFSET #{offset} ROWS FETCH NEXT
		#{limit} ROWS ONLY
	</select>

	<!-- ✅ 게시글 총 개수 조회 -->
	<select id="countBoards" resultType="int">
		SELECT COUNT(*) FROM ini_board
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="keyword != null and keyword != ''">
				AND (board_title LIKE '%' || #{keyword} || '%'
				OR
				board_content LIKE '%' || #{keyword} || '%')
			</if>
			<if test="category != null and category != ''">
				AND board_category = #{category}
			</if>
		</trim>
	</select>

	<!-- 게시글 제목 가져오기 -->
	<select id="getBoardTitle" resultType="string">
		SELECT board_title
		FROM
		ini_board
		WHERE board_title = #{boardtitle}
	</select>

	<select id="selectReportedBoards"
		resultType="com.ini.admin.vo.AdminReportDTO">
		SELECT DISTINCT
		r.report_id,
		r.report_content,
		r.report_user,
		r.report_date,
		r.report_category,
		r.board_id
		FROM board_report r
		JOIN
		ini_board b ON b.board_id = r.board_id
	</select>

	<delete id="deleteBoardById" parameterType="string">
		DELETE FROM INI_BOARD
		WHERE board_id = #{board_id}
	</delete>

	<delete id="deleteBoardByUserId" parameterType="string">
		DELETE FROM
		INI_BOARD WHERE user_id = #{id}
	</delete>

	<delete id="deleteImageByPath" parameterType="String">
		DELETE FROM BOARD_IMAGE WHERE IMAGE_PATH = #{image_path}
	</delete>

</mapper>